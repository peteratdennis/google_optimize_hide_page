<?php
/**
 * @file
 * google_optimize_hide_page.module
 */

/**
 * Implements hook_menu().
 */
function google_optimize_hide_page_menu() {
  $items['admin/config/system/google_optimize_hide_page'] = array(
    'title' => 'Google Optimize page-hiding snippet',
    'description' => 'Configure the Google Optimize page-hiding snippet.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('google_optimize_hide_page_admin_settings_form'),
    'access arguments' => array('administer google optimize hide page'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'google_optimize_hide_page.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_help().
 */
function google_optimize_hide_page_help($path, $arg) {
  switch ($path) {
    case 'admin/config/system/google_optimize_hide_page':
      return t(
        'The <a href="@opt_url">Optimize page-hiding snippet</a> supports loading
 your Optimize container asynchronously while hiding the page until the container is ready,
 ensuring that users don\'t see the initial page content prior to it being modified by an experiment.',
        array('@opt_url' => 'https://developers.google.com/optimize/#the_page-hiding_snippet_code')
      );
  }
}

/**
 * Implements hook_permission().
 */
function google_optimize_hide_page_permission() {
  return array(
    'administer google optimize hide page' => array(
      'title' => t('Administer Google Optimize page-hiding snippet'),
      'description' => t('Perform maintenance tasks for Google Optimize page-hiding.'),
    ),
  );
}

/**
 * Whether to use the Google Optimize page-hiding snippet.
 * @return bool
 */
function google_optimize_hide_page_enabled() {
  return (bool) variable_get('google_optimize_hide_page_enable', TRUE);
}

/**
 * The Optimize container ids.
 * @see https://developers.google.com/optimize/#loading_multiple_containers
 *
 * @return array
 */
function google_optimize_hide_page_container_ids() {
  static $ids;

  if (!is_null($ids)) {
    return $ids;
  }

  $csv = variable_get('google_optimize_hide_page_container_ids', '');
  if (empty($csv)) {
    $ids = array();
  }
  else {
    $ids = str_getcsv($csv);
  }

  return $ids;
}

/**
 * The default amount of time Optimize will wait before removing the .async-hide class from the <html> element.
 * @see https://developers.google.com/optimize/#changing_the_timeout
 *
 * @return integer
 */
function google_optimize_hide_page_timeout() {
  return (int) variable_get('google_optimize_hide_page_timeout', 4000);
}

/**
 * If the async-hide class name is already defined in your CSS, you can choose a different name.
 * @see https://developers.google.com/optimize/#changing_the_async-hide_class_name
 *
 * @return string
 */
function google_optimize_hide_page_class_name() {
  return variable_get('google_optimize_hide_page_class_name', 'async-hide');
}

/**
 * Whether to put the snippet on the page.
 *
 * @return bool
 */
function google_optimize_hide_page_active() {
  if (!google_optimize_hide_page_enabled()) {
    // Not enabled so do nothing.
    return FALSE;
  }

  if (path_is_admin(current_path())) {
    // Not on admin pages.
    return FALSE;
  }

  $container_ids = google_optimize_hide_page_container_ids();
  if (empty($container_ids)) {
    // No container configured, so do nothing.
    return FALSE;
  }

  return TRUE;
}

/**
 * Implements hook_page_alter() to insert JavaScript to the appropriate scope/region of the page.
 */
function google_optimize_hide_page_page_alter(&$page) {
  if (!google_optimize_hide_page_active()) {
    return;
  }

  // Create the container string 'GTM-XXXXXX':true,'GTM-YYYYYY':true
  $container_ids = google_optimize_hide_page_container_ids();
  $container_ids = array_map(
    function($value) {
      return "'" . trim($value) . "':true";
    },
    $container_ids
  );
  $container_str = join(',', $container_ids);
  $class_name = google_optimize_hide_page_class_name();
  $timeout = google_optimize_hide_page_timeout();

  $js = sprintf(
    "(function(a,s,y,n,c,h,i,d,e){s.className+=' '+y;h.start=1*new Date;
h.end=i=function(){s.className=s.className.replace(RegExp(' ?'+y),'')};
(a[n]=a[n]||[]).hide=h;setTimeout(function(){i();h.end=null},c);h.timeout=c;
})(window,document.documentElement,'%s','dataLayer',%d,
{%s});",
    $class_name,
    $timeout,
    $container_str
  );

  $css = '.' . $class_name . ' { opacity: 0 !important} ';
  drupal_add_css(
    $css,
    array(
      'type' => 'inline',
      'weight' => -10,
    )
  );
  drupal_add_js($js, array(
    'type' => 'inline',
    'scope' => 'header',
    'weight' => -10,
  ));
}
